const NewsletterModel = require('../models/NewsletterModel');

const isValidEmail = (email) => {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[a-zA-Z]{2,}$/;
  return emailRegex.test(email);
};

const subscribe = async (req, res) => {
  const { email } = req.body;

  // Check if email is provided
  if (!email) {
    return res.status(400).json({ error: 'Email is required' });
  }

  // Check if email is valid
  if (!isValidEmail(email)) {
    return res.status(400).json({ error: 'Invalid email format' });
  }

  try {
    const exists = await NewsletterModel.isEmailSubscribed(email);
    if (exists) {
      return res.status(409).json({ message: 'Email is already subscribed' });
    }

    const [newSubscriber] = await NewsletterModel.addSubscriber(email);
    res.status(201).json({ message: 'Subscribed successfully', subscriber: newSubscriber });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Server error' });
  }
};

const getSubscribers = async (req, res) => {
  try {
    const subscribers = await NewsletterModel.getAllSubscribers();
    res.json(subscribers);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Server error' });
  }
};

const unsubscribe = async (req, res) => {
  const { email } = req.body;

  if (!email) return res.status(400).json({ error: 'Email is required' });

  try {
    const deleted = await NewsletterModel.deleteSubscriber(email);
    if (deleted === 0) {
      return res.status(404).json({ message: 'Email not found' });
    }

    res.json({ message: 'Unsubscribed successfully' });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Server error' });
  }
};

module.exports = {
  subscribe,
  getSubscribers,
  unsubscribe,
};
