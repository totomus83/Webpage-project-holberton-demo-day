// purpose of this file, validates email, calls model to add subscriber, sends confirmation email and returns response


const NewsletterModel = require('../models/NewsletterModel');
const nodemailer = require('nodemailer');
require('dotenv').config();

const isValidEmail = (email) => {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[a-zA-Z]{2,}$/;
  return emailRegex.test(email);
};

// create transporter using gmail info from .env
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});

const subscribe = async (req, res) => {
  const { email } = req.body;

  if (!email) {
    return res.status(400).json({ error: 'Email is required' });
  }

  if (!isValidEmail(email)) {
    return res.status(400).json({ error: 'Invalid email format' });
  }

  try {
    const exists = await NewsletterModel.isEmailSubscribed(email);
    if (exists) {
      return res.status(409).json({ message: 'Email is already subscribed' });
    }

    // if no error, add object to the database
    const [newSubscriber] = await NewsletterModel.addSubscriber(email);

    // send confirmation email
    await transporter.sendMail({
      from: `"Newsletter Team" <${process.env.EMAIL_USER}>`,
      to: email,
      subject: 'Subscription Confirmation',
      text: 'Thank you for subscribing to our newsletter!',
      html: `<p>Hi there,</p><p>Thanks for subscribing to our newsletter. You'll now receive updates from us.</p>`,
    });

    res.status(201).json({
      message: 'Subscribed successfully, confirmation email sent',
      subscriber: newSubscriber,
    });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Server error' });
  }
};

// debug
const getSubscribers = async (req, res) => {
  try {
    const subscribers = await NewsletterModel.getAllSubscribers();
    res.json(subscribers);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Server error' });
  }
};

//debug
const unsubscribe = async (req, res) => {
  const { email } = req.body;

  if (!email) return res.status(400).json({ error: 'Email is required' });

  try {
    const deleted = await NewsletterModel.deleteSubscriber(email);
    if (deleted === 0) {
      return res.status(404).json({ message: 'Email not found' });
    }

    res.json({ message: 'Unsubscribed successfully' });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Server error' });
  }
};

module.exports = {
  subscribe,
  getSubscribers,
  unsubscribe,
};
